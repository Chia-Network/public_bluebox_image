name: Workflow for generating the bluebox image
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
jobs:
  packer_validate:
    runs-on: [ k8s-public ]
    container:
      image: alpine:latest
    timeout-minutes: 60
    steps:
      - name: install deps
        run: apk add aws-cli git packer ansible

      - uses: actions/checkout@v2

      - name: Checkout Roles
        uses: actions/checkout@v2
        with:
          repository: Chia-Network/ansible-roles
          path: ansible/roles

      - name: Packer Validate
        run: |
          packer validate bluebox_base.json

  packer_build:
    needs: [ packer_validate ]
    runs-on: [ k8s-public ]
    container:
      image: alpine:latest
    timeout-minutes: 200
    steps:
      - name: Get ephemeral aws credentials
        uses: Chia-Network/actions/vault/aws-sts@main
        with:
          vault_url: ${{ secrets.VAULT_URL }}
          vault_token: ${{ secrets.VAULT_TOKEN }}
          role_name: ami-build

      - name: install deps
        run: apk add aws-cli git packer ansible

      - uses: actions/checkout@v2

      - name: Checkout Roles
        uses: actions/checkout@v2
        with:
          repository: Chia-Network/ansible-roles
          path: ansible/roles

      - name: Packer build
        run: |
          export AWS_POLL_DELAY_SECONDS=60 && export AWS_MAX_ATTEMPTS=180
          packer build bluebox_base.json

  terraform:
    needs: packer_build
    runs-on: [ k8s-public ]
    container:
      image: hashicorp/terraform:latest
      options: --entrypoint /bin/sh
    timeout-minutes: 200
    env:
      S3_BUCKET_NAME: ${{secrets.S3_BUCKET_NAME}}
    steps:
      - name: Get ephemeral aws credentials
        uses: Chia-Network/actions/vault/aws-sts@main
        with:
          vault_url: ${{ secrets.VAULT_URL }}
          vault_token: ${{ secrets.VAULT_TOKEN }}
          role_name: ami-build

      - name:
        run: |
          apk add py3-pip
          pip3 install j2cli

      - uses: actions/checkout@v2

      - name: Create terraform file from jinja2
        run: |
          j2 -o terraform/state.tf terraform/state.tf.j2
          cat terraform/state.tf

      - uses: Chia-Network/actions/terraform/apply@main
        with:
          workspace: default
          varfile: /dev/null
          terraform_dir: terraform
